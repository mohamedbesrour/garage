[{"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\index.js":"1","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\App.js":"2","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\context\\authContext.js":"3","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\Navigation.js":"4","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\context\\Auth.js":"5","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\NavBar.js":"6","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\employe.js":"7","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\profil.js":"8","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\vente.js":"9","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\admin.js":"10","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\error.js":"11","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\connexion.js":"12","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\home.js":"13","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\services.js":"14","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\ListTodos.js":"15","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\InputTodo.js":"16","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\ListVoiture.js":"17","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\Footer.js":"18","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\InputUser.js":"19","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\ListUsers.js":"20","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\InputVoiture.js":"21","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\EditTodo.js":"22","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\EditVoiture.js":"23","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\EditUser.js":"24","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\context\\AuthAdmin.js":"25"},{"size":433,"mtime":1699211623277,"results":"26","hashOfConfig":"27"},{"size":533,"mtime":1710330351118,"results":"28","hashOfConfig":"27"},{"size":675,"mtime":1710452311908,"results":"29","hashOfConfig":"27"},{"size":1655,"mtime":1710450279916,"results":"30","hashOfConfig":"27"},{"size":4164,"mtime":1710429415473,"results":"31","hashOfConfig":"27"},{"size":3072,"mtime":1710366672927,"results":"32","hashOfConfig":"27"},{"size":1492,"mtime":1710454595007,"results":"33","hashOfConfig":"27"},{"size":1899,"mtime":1709806582143,"results":"34","hashOfConfig":"27"},{"size":1576,"mtime":1709761987871,"results":"35","hashOfConfig":"27"},{"size":1499,"mtime":1710454333320,"results":"36","hashOfConfig":"27"},{"size":96,"mtime":1699048662697,"results":"37","hashOfConfig":"27"},{"size":5650,"mtime":1709764150132,"results":"38","hashOfConfig":"27"},{"size":2372,"mtime":1710450197708,"results":"39","hashOfConfig":"27"},{"size":7090,"mtime":1710332429966,"results":"40","hashOfConfig":"27"},{"size":2123,"mtime":1709738552895,"results":"41","hashOfConfig":"27"},{"size":1143,"mtime":1709810716213,"results":"42","hashOfConfig":"27"},{"size":2306,"mtime":1709735987044,"results":"43","hashOfConfig":"27"},{"size":968,"mtime":1699227598570,"results":"44","hashOfConfig":"27"},{"size":2535,"mtime":1699258032019,"results":"45","hashOfConfig":"27"},{"size":2554,"mtime":1709763780150,"results":"46","hashOfConfig":"27"},{"size":4475,"mtime":1709736048309,"results":"47","hashOfConfig":"27"},{"size":2767,"mtime":1709733010479,"results":"48","hashOfConfig":"27"},{"size":3687,"mtime":1709736056959,"results":"49","hashOfConfig":"27"},{"size":3716,"mtime":1699258166484,"results":"50","hashOfConfig":"27"},{"size":4267,"mtime":1710432833303,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},"1uc2m55",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"56"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"56"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"56"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"56"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"56"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\index.js",["141"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n//authentification\nimport { Provider } from 'react-redux';\nimport { AuthContextProvider } from './context/authContext.js';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>\n);\n",["142"],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\App.js",["143"],[],"import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\nimport Navigation from \"./Navigation\";\nimport { AuthContext, AuthContextProvider } from \"./context/authContext\";\n\nconst AppContainer = styled.div`\n  // max-width: 1520px;\n  // margin: 0 auto;\n`;\n\nfunction App() {\n  return (\n    <AuthContextProvider>\n    <AppContainer>\n      <Fragment>\n        <div>\n          <Navigation />\n        </div>\n      </Fragment>\n    </AppContainer>\n  </AuthContextProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\context\\authContext.js",["144","145","146"],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\Navigation.js",["147","148"],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\context\\Auth.js",[],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\NavBar.js",[],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\employe.js",["149","150"],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\profil.js",[],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\vente.js",["151"],[],"import React, { Fragment, useEffect, useState } from \"react\";\r\n// import CarCard from \"../components/CarCard\";\r\nimport Footer from \"../components/Footer\";\r\nimport \"../style/cardVoiture.css\";\r\n\r\nexport default function Vente() {\r\n  const [voitures, setVoitures] = useState([]);\r\n\r\n\r\n  // pour lister tout les commentaires\r\n  const getVoitures = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/voiture/voiture`);\r\n      const jsonData = await response.json(); //await pour dire d'attendre\r\n\r\n      setVoitures(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getVoitures();\r\n  }, []);\r\n\r\n  return ( \r\n    <Fragment>\r\n      <h3 className=\"footer-title\">Découvrez notre sélection de véhicules d'occasion</h3>\r\n      <div className=\"pageVente\">\r\n      <div className=\"carte\"></div>\r\n      <div className=\"carte\"></div>\r\n      <div className=\"carte\"></div>\r\n\r\n      <div className=\"car10-grid\">\r\n        {voitures.map((voiture) => (\r\n          <div className=\"car10-card\" key={voiture.voiture_id}>\r\n            <div className=\"car10-image\">\r\n              <img src={voiture.img} alt=\"photo\" />\r\n            </div>\r\n            <div className=\"car10-info\">\r\n              <h2>{voiture.modele}</h2>\r\n              <p>Année : {voiture.annee}</p>\r\n              <p>Kilométrage : {voiture.kilometrage}</p>\r\n              <p>Prix : {voiture.prix}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      </div>\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n}\r\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\admin.js",["152","153","154","155"],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\error.js",[],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\connexion.js",[],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\home.js",[],[],["156"],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\pages\\services.js",[],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\ListTodos.js",["157"],[],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nconst ListTodos = () => {\r\n  // État local pour stocker les données du formulaire\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  // pour supprimer un commentaire\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      const deleteTodo = await fetch(\r\n        `${process.env.REACT_APP_SERVERURL}/commentaire/todos/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n\r\n      setTodos(\r\n        todos.filter((commentaire) => commentaire.commentaire_id !== id)\r\n      ); // désaffiche le commentaire qui a été supprimé en interne\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  // pour lister tout les commentaires\r\n  const getTodos = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_SERVERURL}/commentaire/todos`\r\n      );\r\n      const jsonData = await response.json(); //await pour dire d'attendre\r\n\r\n      setTodos(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Commentaire</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/*<tr>\r\n        <td>John</td>\r\n        <td>Doe</td>\r\n        <td>john@example.com</td>\r\n      </tr>  */}\r\n          {todos.map((commentaire) => (\r\n            <tr key={commentaire.commentaire_id}>\r\n              <td>{commentaire.description}</td>\r\n              <td>\r\n                <EditTodo commentaire={commentaire} />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => deleteTodo(commentaire.commentaire_id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListTodos;\r\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\InputTodo.js",["158"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputTodo = () => {\r\n    // État local pour stocker les données du formulaire\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { description };\r\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/commentaire/todos`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      // window.location = \"/employe\";\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"text-center mt-5\">Donne nous ton avis ici</h1>\r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-success\">Add</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default InputTodo;\r\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\ListVoiture.js",["159"],[],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditVoiture from \"./EditVoiture\";\r\n\r\nconst ListVoitures = () => {\r\n    // État local pour stocker les données du formulaire\r\n  const [voitures, setVoitures] = useState([]);\r\n\r\n  // pour supprimer une voiture\r\n  const deleteVoiture = async (id) => {\r\n    try {\r\n      const deleteVoiture = await fetch(`http://localhost:5000/voiture/voiture/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      setVoitures(voitures.filter((voiture) => voiture.voiture_id !== id)); // désaffiche le commentaire qui a été supprimé en interne\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  // pour lister tout les commentaires\r\n  const getVoitures = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/voiture/voiture\");\r\n      const jsonData = await response.json(); //await pour dire d'attendre\r\n\r\n      setVoitures(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getVoitures();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Modèle</th>\r\n            <th>Année</th>\r\n            <th>Kilométrage</th>\r\n            <th>Montant</th>\r\n            <th>URL image</th>\r\n            <th>Modifier</th>\r\n            <th>Supprimer</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {voitures.map((voiture) => (\r\n            <tr key={voiture.voiture_id}>\r\n              <td>{voiture.modele}</td>\r\n              <td>{voiture.annee}</td>\r\n              <td>{voiture.kilometrage}</td>\r\n              <td>{voiture.prix}</td>\r\n              <td>{voiture.img}</td>\r\n              {/* <td>\r\n                <img src={voiture.img} alt=\"photoo\" />\r\n              </td> */}\r\n\r\n              <td>\r\n                <EditVoiture voiture={voiture} />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => deleteVoiture(voiture.voiture_id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListVoitures;\r\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\Footer.js",[],[],"C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\InputUser.js",["160"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputUser = () => {\r\n  // État local pour stocker les données du formulaire\r\n  const [formData, setFormData] = useState({\r\n    role: \"\",\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n// Destructuration des données du formulaire pour une utilisation plus facile\r\n  const { role, nom, prenom, email, password } = formData;\r\n\r\n  // Fonction de mise à jour des données du formulaire lorsqu'un champ change\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n       // Crée un objet 'body' contenant les données du formulaire\r\n      const body = { role, nom, prenom, email, password };\r\n      \r\n      // Envoie une requête POST au serveur avec les données du formulaire\r\n      const response = await fetch(\"http://localhost:5000/connexion\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      window.location = \"/admin\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"text-center mt-5\">Ajouter un employé</h1>\r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"role\"\r\n          value={role}\r\n          onChange={onChange}\r\n          placeholder=\"Admin ou Users\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"nom\"\r\n          value={nom}\r\n          onChange={onChange}\r\n          placeholder=\"Nom de l'employé\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"prenom\"\r\n          value={prenom}\r\n          onChange={onChange}\r\n          placeholder=\"Prénom de l'employé\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          placeholder=\"email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          placeholder=\"mot de passe\"\r\n        />\r\n        <button className=\"btn btn-success\">Enregistré</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InputUser;","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\ListUsers.js",["161"],[],"import React, { Fragment, useEffect, useState } from \"react\";\r\n// useState est utilisé pour gérer l'état local d'un composant\r\n// useEffect est utilisé pour gérer les effets secondaires dans un composant,\r\n// tels que les appels à des API, la mise à jour du DOM\r\nimport EditUser from \"./EditUser\";\r\n\r\nconst ListUsers = () => {\r\n    // État local pour stocker les données du formulaire\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // pour supprimer un commentaire\r\n  const deleteUser = async (id) => {\r\n    try {\r\n      const deleteUser = await fetch(`http://localhost:5000/connexion/connexion/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      //                        -  voiture\r\n      setUsers(users.filter((connexion) => connexion.user_id !== id)); // désaffiche le commentaire qui a été supprimé en interne\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  // pour lister tout les commentaires\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/connexion/connexion\");\r\n      const jsonData = await response.json(); //await pour dire d'attendre\r\n\r\n      setUsers(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Rôle</th>\r\n            <th>nom</th>\r\n            <th>Prenom</th>\r\n            <th>Email</th>\r\n            <th>Mot de passe</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(\r\n            (\r\n              connexion //voitures.map  ((voiture))\r\n            ) => (\r\n              <tr key={connexion.user_id}>\r\n                <td>{connexion.role}</td>\r\n                <td>{connexion.nom}</td>\r\n                <td>{connexion.prenom}</td>\r\n                <td>{connexion.email}</td>\r\n                <td>{connexion.password}</td>\r\n\r\n                <td>\r\n                  <EditUser connexion={connexion} /> {/* voiture = voiture */}\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => deleteUser(connexion.user_id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\InputVoiture.js",["162"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputVoiture = () => {\r\n    // État local pour stocker les données du formulaire\r\n  const [formData, setFormData] = useState({\r\n    modele: \"\",\r\n    annee: \"\",\r\n    kilometrage: \"\",\r\n    prix: \"\",\r\n    img: \"\",\r\n  });\r\n\r\n  const { modele, annee, kilometrage, prix, img } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { modele, annee, kilometrage, prix, img };\r\n      const response = await fetch(\"http://localhost:5000/voiture/voiture\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"text-center mt-5\">Ajouter un nouveau véhicule</h1>\r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"modele\"\r\n          value={modele}\r\n          onChange={onChange}\r\n          placeholder=\"Modele de voiture\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"annee\"\r\n          value={annee}\r\n          onChange={onChange}\r\n          placeholder=\"Année du véhicule\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"kilometrage\"\r\n          value={kilometrage}\r\n          onChange={onChange}\r\n          placeholder=\"kilometrage\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"prix\"\r\n          value={prix}\r\n          onChange={onChange}\r\n          placeholder=\"prix\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"img\"\r\n          value={img}\r\n          onChange={onChange}\r\n          placeholder=\"photo du véhicule\"\r\n        />\r\n        <button className=\"btn btn-success\">Valider</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InputVoiture;\r\n\r\n// import React, { Fragment, useState } from \"react\";\r\n\r\n// function InputVoiture() {\r\n//   const InputVoiture = () => {\r\n//     const [\r\n//       modele,\r\n//       annee,\r\n//       kilometrage,\r\n//       prix,\r\n//       img,\r\n//       setModele,\r\n//       setAnnee,\r\n//       setKilometrage,\r\n//       setPrix,\r\n//       setImg,\r\n//     ] = useState(\"\");\r\n\r\n//     const onSubmitForm = async (e) => {\r\n//       e.preventDefault();\r\n//       try {\r\n//         const body = { modele, annee, kilometrage, prix, img };\r\n//         const response = await fetch(\"http://localhost:5000/voiture\", {\r\n//           method: \"POST\",\r\n//           headers: { \"Content-Type\": \"application/json\" },\r\n//           body: JSON.stringify(body),\r\n//         });\r\n\r\n//         window.location = \"/\";\r\n//       } catch (err) {\r\n//         console.error(err.message);\r\n//       }\r\n//     };\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Fragment>\r\n//         <h1 className=\"text-center mt-5\">Ajoute une voiture !</h1>\r\n//         <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={modele}\r\n//             onChange={(e) => setModele(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={annee}\r\n//             onChange={(e) => setAnnee(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={kilometrage}\r\n//             onChange={(e) => setKilometrage(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={prix}\r\n//             onChange={(e) => setPrix(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={img}\r\n//             onChange={(e) => setImg(e.target.value)}\r\n//           />\r\n//           <button className=\"btn btn-success\">Add</button>\r\n//         </form>\r\n//       </Fragment>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default InputVoiture;\r\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\EditTodo.js",["163"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditTodo = ({ commentaire }) => {\r\n    // État local pour stocker les données du formulaire\r\n  const [description, setDescription] = useState(commentaire.description);\r\n\r\n  //Edit description function\r\n  const updateDescription = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { description };\r\n      const response = await fetch(\r\n        `http://localhost:5000/commentaire/todos/${commentaire.commentaire_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      window.location = \"/employe\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${commentaire.commentaire_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      {/* id = id10    pour rendre le modal unique*/}\r\n      <div\r\n        className=\"modal\"\r\n        id={`id${commentaire.commentaire_id}`}\r\n        onClick={() => setDescription(commentaire.description)} //modifie sur la même ligne\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">modifier le commentaire</h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setDescription(commentaire.description)} //modifie sur la même ligne\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                onClick={(e) => updateDescription(e)}\r\n              >\r\n                Modifier\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setDescription(commentaire.description)} //modifie sur la même ligne\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditTodo;\r\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\EditVoiture.js",["164"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditVoiture = ({ voiture }) => {\r\n    // État local pour stocker les données du formulaire\r\n  const [formData, setFormData] = useState({\r\n    modele: voiture.modele,\r\n    annee: voiture.annee,\r\n    kilometrage: voiture.kilometrage,\r\n    prix: voiture.prix,\r\n    img: voiture.img,\r\n  });\r\n\r\n  // Fonction pour mettre à jour les champs\r\n  const updateFields = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Fonction pour mettre à jour le commentaire\r\n  const updateComment = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/voiture/voiture/${voiture.voiture_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n\r\n      window.location = \"/admin\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${voiture.voiture_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      <div\r\n        className=\"modal\"\r\n        id={`id${voiture.voiture_id}`}\r\n        onClick={() => setFormData(voiture)}\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Modifier la voiture</h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setFormData(voiture)}\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"modele\"\r\n                value={formData.modele}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"annee\"\r\n                value={formData.annee}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"kilometrage\"\r\n                value={formData.kilometrage}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"prix\"\r\n                value={formData.prix}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"img\"\r\n                value={formData.img}\r\n                onChange={updateFields}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                onClick={updateComment}\r\n              >\r\n                Modifier\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setFormData(voiture)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditVoiture;\r\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\components\\EditUser.js",["165"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditUser = ({ connexion }) => {\r\n    // État local pour stocker les données du formulaire\r\n  const [formData, setFormData] = useState({\r\n    role: connexion.role,\r\n    nom: connexion.nom,\r\n    prenom: connexion.prenom,\r\n    email: connexion.email,\r\n    password: connexion.password,\r\n  });\r\n\r\n  // Fonction pour mettre à jour les champs\r\n  const updateFields = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Fonction pour mettre à jour le commentaire\r\n  const updateEmploye = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/connexion/${connexion.user_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n\r\n      window.location = \"/admin\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${connexion.user_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      <div\r\n        className=\"modal\"\r\n        id={`id${connexion.user_id}`}\r\n        onClick={() => setFormData(connexion)} //voiture\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Modifier l utilisateur</h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setFormData(connexion)} //voiture\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"role\"\r\n                value={formData.role}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"nom\"\r\n                value={formData.nom}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"prenom\"\r\n                value={formData.prenom}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={updateFields}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                onClick={updateEmploye}\r\n              >\r\n                Modifier\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setFormData(connexion)} //voiture\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","C:\\Users\\ASSOFAC 60\\Documents\\GitHub\\garage\\client\\src\\context\\AuthAdmin.js",["166","167"],[],{"ruleId":"168","severity":1,"message":"169","line":7,"column":10,"nodeType":"170","messageId":"171","endLine":7,"endColumn":18},{"ruleId":"172","replacedBy":"173"},{"ruleId":"168","severity":1,"message":"174","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":21},{"ruleId":"168","severity":1,"message":"175","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":18},{"ruleId":"168","severity":1,"message":"176","line":2,"column":20,"nodeType":"170","messageId":"171","endLine":2,"endColumn":29},{"ruleId":"168","severity":1,"message":"177","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":13},{"ruleId":"168","severity":1,"message":"178","line":16,"column":10,"nodeType":"170","messageId":"171","endLine":16,"endColumn":17},{"ruleId":"168","severity":1,"message":"179","line":19,"column":10,"nodeType":"170","messageId":"171","endLine":19,"endColumn":16},{"ruleId":"168","severity":1,"message":"180","line":13,"column":10,"nodeType":"170","messageId":"171","endLine":13,"endColumn":17},{"ruleId":"168","severity":1,"message":"181","line":13,"column":19,"nodeType":"170","messageId":"171","endLine":13,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":38,"column":15,"nodeType":"184","endLine":38,"endColumn":52},{"ruleId":"168","severity":1,"message":"176","line":1,"column":29,"nodeType":"170","messageId":"171","endLine":1,"endColumn":38},{"ruleId":"168","severity":1,"message":"175","line":1,"column":40,"nodeType":"170","messageId":"171","endLine":1,"endColumn":48},{"ruleId":"168","severity":1,"message":"180","line":14,"column":10,"nodeType":"170","messageId":"171","endLine":14,"endColumn":17},{"ruleId":"168","severity":1,"message":"181","line":14,"column":19,"nodeType":"170","messageId":"171","endLine":14,"endColumn":28},{"ruleId":"172","replacedBy":"185"},{"ruleId":"168","severity":1,"message":"186","line":12,"column":13,"nodeType":"170","messageId":"171","endLine":12,"endColumn":23},{"ruleId":"168","severity":1,"message":"187","line":11,"column":13,"nodeType":"170","messageId":"171","endLine":11,"endColumn":21},{"ruleId":"168","severity":1,"message":"188","line":12,"column":13,"nodeType":"170","messageId":"171","endLine":12,"endColumn":26},{"ruleId":"168","severity":1,"message":"187","line":27,"column":13,"nodeType":"170","messageId":"171","endLine":27,"endColumn":21},{"ruleId":"168","severity":1,"message":"189","line":14,"column":13,"nodeType":"170","messageId":"171","endLine":14,"endColumn":23},{"ruleId":"168","severity":1,"message":"187","line":23,"column":13,"nodeType":"170","messageId":"171","endLine":23,"endColumn":21},{"ruleId":"168","severity":1,"message":"187","line":12,"column":13,"nodeType":"170","messageId":"171","endLine":12,"endColumn":21},{"ruleId":"168","severity":1,"message":"187","line":22,"column":13,"nodeType":"170","messageId":"171","endLine":22,"endColumn":21},{"ruleId":"168","severity":1,"message":"187","line":22,"column":13,"nodeType":"170","messageId":"171","endLine":22,"endColumn":21},{"ruleId":"168","severity":1,"message":"180","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":17},{"ruleId":"168","severity":1,"message":"190","line":6,"column":30,"nodeType":"170","messageId":"171","endLine":6,"endColumn":42},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","no-new-object",["191"],"'AuthContext' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'Cookies' is defined but never used.","'cookie' is assigned a value but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["191"],"'deleteTodo' is assigned a value but never used.","'response' is assigned a value but never used.","'deleteVoiture' is assigned a value but never used.","'deleteUser' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","no-object-constructor"]