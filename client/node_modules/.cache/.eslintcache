[{"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\index.js":"1","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\App.js":"2","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\context\\authContext.js":"3","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\navigation\\Footer.js":"4","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\navigation\\Navigation.js":"5","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\navigation\\NavBar.js":"6","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\context\\AuthAdmin.js":"7","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\error.js":"8","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\context\\Auth.js":"9","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\vente.js":"10","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\admin.js":"11","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\connexion.js":"12","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\services.js":"13","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\employe.js":"14","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\home.js":"15","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\Modal.js":"16","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\InputUser.js":"17","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\InputVoiture.js":"18","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\ListUsers.js":"19","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\ListVoiture.js":"20","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\InputTodo.js":"21","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\ListTodos.js":"22","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\EditUser.js":"23","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\EditVoiture.js":"24","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\EditTodo.js":"25"},{"size":368,"mtime":1713258263975,"results":"26","hashOfConfig":"27"},{"size":426,"mtime":1713258263849,"results":"28","hashOfConfig":"27"},{"size":340,"mtime":1710937551562,"results":"29","hashOfConfig":"27"},{"size":3741,"mtime":1716456578958,"results":"30","hashOfConfig":"27"},{"size":1648,"mtime":1716471029180,"results":"31","hashOfConfig":"27"},{"size":2362,"mtime":1717264737940,"results":"32","hashOfConfig":"27"},{"size":4216,"mtime":1710934867856,"results":"33","hashOfConfig":"27"},{"size":96,"mtime":1710159643936,"results":"34","hashOfConfig":"27"},{"size":3772,"mtime":1713258263853,"results":"35","hashOfConfig":"27"},{"size":4137,"mtime":1713258263982,"results":"36","hashOfConfig":"27"},{"size":1616,"mtime":1710934867873,"results":"37","hashOfConfig":"27"},{"size":1199,"mtime":1713258263978,"results":"38","hashOfConfig":"27"},{"size":15139,"mtime":1713258263981,"results":"39","hashOfConfig":"27"},{"size":1430,"mtime":1713258263979,"results":"40","hashOfConfig":"27"},{"size":3782,"mtime":1713258263980,"results":"41","hashOfConfig":"27"},{"size":449,"mtime":1713258263851,"results":"42","hashOfConfig":"27"},{"size":2535,"mtime":1710159643904,"results":"43","hashOfConfig":"27"},{"size":4475,"mtime":1710159643904,"results":"44","hashOfConfig":"27"},{"size":2554,"mtime":1710159643904,"results":"45","hashOfConfig":"27"},{"size":2306,"mtime":1710159643904,"results":"46","hashOfConfig":"27"},{"size":1143,"mtime":1710159643904,"results":"47","hashOfConfig":"27"},{"size":4123,"mtime":1713258263850,"results":"48","hashOfConfig":"27"},{"size":3716,"mtime":1710159643904,"results":"49","hashOfConfig":"27"},{"size":3687,"mtime":1710159643904,"results":"50","hashOfConfig":"27"},{"size":2770,"mtime":1710934867855,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1mygyfe",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"55"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"55"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"55"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"55"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"55"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"55"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"55"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"55"},"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\index.js",[],[],["140"],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\App.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\context\\authContext.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\navigation\\Footer.js",["141","142","143","144","145"],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\navigation\\Navigation.js",["146"],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\navigation\\NavBar.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\context\\AuthAdmin.js",["147","148"],[],"import React, { useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport \"../style/auth.css\";\r\n\r\nconst AuthAdmin = () => {\r\n  const [cookies, setCookie, removeCookie] = useCookies(null);\r\n  const [isLogIn, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState(null); //stocke les valeurs des champs de formulaire\r\n  const [password, setPassword] = useState(null); //stocke les valeurs ...\r\n  const [confirmPassword, setConfirmPassword] = useState(null); //stocke les valeurs ...\r\n  const [error, setError] = useState(null); //affiche msg d'erreur\r\n\r\n  // console.log(cookies)\r\n  \r\n\r\n  //Change le statut connexion ou inscription et reinitialise les msg erreur\r\n  const viewLogin = (status) => {\r\n    setError(null);\r\n    setIsLogin(status);\r\n  };\r\n\r\n  const handleSubmit = async (e, endpoint) => {\r\n    e.preventDefault(); // Empêche le rechargement de la page par défaut\r\n    if (!isLogIn && password !== confirmPassword) {\r\n      // Vérifie si les mots de passe correspondent dans s'inscrire\r\n      setError(\"Le mot de passe ne correspond pas\");\r\n      return;\r\n    }\r\n\r\n    // Validation de l'email avec une expression régulière\r\n    const emailRegex = /^[A-Za-z0-9]+@[A-Za-z]+\\.[A-Za-z]+$/; //lettres avant \"@\" lettres entre \".\" lettres après.\r\n    if (!emailRegex.test(email)) {\r\n      setError(\"Veuillez saisir une adresse e-mail valide.\");\r\n      return;\r\n    }\r\n\r\n    console.log(`${process.env.REACT_APP_SERVERURLACCESSADMIN}/${endpoint}`);\r\n    // Effectue une requête POST vers le serveur avec les informations d'authentification\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_SERVERURLACCESSADMIN}/${endpoint}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" }, // En-têtes de la requête\r\n        body: JSON.stringify({ email, password }), // Corps de la requête (données au format JSON)\r\n      }\r\n    );\r\n\r\n    const data = await response.json(); // Convertit la réponse en format JSON\r\n    // console.log(data)\r\n    if (data.detail) {\r\n      // Vérifie s'il y a une erreur dans la réponse\r\n      setError(data.detail); // Définit un message d'erreur\r\n    } else {\r\n      // Si aucune erreur n'est retournée\r\n      // Définit les cookies d'email et de jeton d'authentification avec les données de réponse\r\n      setCookie(\"Email\", data.email);\r\n      setCookie(\"AuthToken\", data.token);\r\n      // Recharge la page pour appliquer les changements (par exemple, rediriger l'utilisateur connecté)\r\n      window.location.href = \"http://localhost:3000/admin\";\r\n      alert(\"Bienvenue, admin !\");\r\n      // window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-container-box\">\r\n        <form>\r\n          <h1>administrateur</h1>\r\n          <h2>{isLogIn ? \"Connectez-vous\" : \"Inscrivez-vous\"}</h2>\r\n          <input\r\n            type=\"texte\"\r\n            placeholder=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"mot de passe\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {!isLogIn && (\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"confirmé mot de passe\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          )}\r\n          <input\r\n            type=\"submit\"\r\n            className=\"create\"\r\n            onClick={(e) => handleSubmit(e, isLogIn ? \"login\" : \"signup\")}\r\n          />\r\n          {error && <p>{error}</p>}\r\n        </form>\r\n\r\n\r\n        <div className=\"auth-options\">\r\n          <button\r\n            onClick={() => viewLogin(false)}\r\n            style={{\r\n              backgroundColor: !isLogIn ? \"rgb(188, 188, 188)\": \"rgb(255, 255, 255)\", }}>\r\n            Sign Up\r\n           </button>{/* couleur  */}\r\n          <button\r\n            onClick={() => viewLogin(true)}\r\n            style={{\r\n              backgroundColor: isLogIn? \"rgb(188, 188, 188)\": \"rgb(255, 255, 255)\", }}>\r\n            LogIn\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthAdmin;\r\n","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\error.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\context\\Auth.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\vente.js",["149","150","151"],[],"// Vente.js\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"../style/vente.css\";\r\nimport \"../style/outils/police.css\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nexport default function Vente() {\r\n  const [voitures, setVoitures] = useState([]);\r\n  const [recherche, setRecherche] = useState({ kilometrage: \"\", prix: \"\" });\r\n  const [resultat, setResultat] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedCar, setSelectedCar] = useState(null);\r\n\r\n  const getVoitures = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/voiture/voiture`);\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la récupération des voitures');\r\n      }\r\n      const jsonData = await response.json();\r\n      setVoitures(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setError(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getVoitures();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setRecherche({ ...recherche, [name]: value });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const { kilometrage, prix } = recherche;\r\n    const filteredVoitures = voitures.filter(voiture => \r\n      (!kilometrage || parseInt(voiture.kilometrage) <= parseInt(kilometrage)) && \r\n      (!prix || parseInt(voiture.prix) <= parseInt(prix))\r\n    );\r\n    setResultat(filteredVoitures);\r\n  };\r\n\r\n  const handleCardClick = (voiture) => {\r\n    setSelectedCar(voiture);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  if (error) {\r\n    return <div>Erreur: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"h1Services\">Découvrez notre sélection de véhicules d'occasion</h1>\r\n      <div className=\"pageVente\">\r\n        <div className=\"filters\">\r\n          <input type=\"range\" name=\"kilometrage\" min=\"0\" max=\"200000\" value={recherche.kilometrage} onChange={handleChange} />\r\n          <input type=\"text\" name=\"prix\" value={recherche.prix} onChange={handleChange} placeholder=\"Prix maximum\" />\r\n          <button onClick={handleSearch}>Filtrer</button>\r\n        </div>\r\n        <div className=\"car-grid\">\r\n          {resultat.length > 0 ? resultat.map((voiture) => (\r\n            <div className=\"car-card large-card\" key={voiture.voiture_id} onClick={() => handleCardClick(voiture)}>\r\n              <div className=\"car-image\"><img src={voiture.img} alt=\"photo de la voiture\" /></div>\r\n              <div className=\"car-info\">\r\n                <h2>{voiture.modele}</h2>\r\n                <p>Année : {voiture.annee}</p>\r\n                <p>Kilométrage : {voiture.kilometrage}</p>\r\n                <p>Prix : {voiture.prix}€</p>\r\n                <button className=\"info-btn\">Info</button>\r\n              </div>\r\n            </div>\r\n          )) : voitures.map((voiture) => (\r\n            <div className=\"car-card large-card\" key={voiture.voiture_id} onClick={() => handleCardClick(voiture)}>\r\n              <div className=\"car-image\"><img src={voiture.img} alt=\"photo de la voiture\" /></div>\r\n              <div className=\"car-info\">\r\n                <h2>{voiture.modele}</h2>\r\n                <p>Année : {voiture.annee}</p>\r\n                <p>Kilométrage : {voiture.kilometrage}</p>\r\n                <p>Prix : {voiture.prix}€</p>\r\n                <button className=\"info-btn\">Info</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {isModalOpen && (\r\n        <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\r\n          <div>\r\n            <h2>Informations du véhicule</h2>\r\n            <img src={selectedCar?.img} alt=\"photo de la voiture\" />\r\n            <p>Modèle: {selectedCar?.modele}</p>\r\n            <p>Année: {selectedCar?.annee}</p>\r\n            <p>Kilométrage: {selectedCar?.kilometrage}</p>\r\n            <p>Prix: {selectedCar?.prix}€</p>\r\n            <p>Email de contact: contact@exemple.com</p>\r\n            <p>Téléphone de contact: +33 1 23 45 67 89</p>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\admin.js",["152","153","154","155"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"../style/admin.css\";\r\n\r\nimport InputVoiture from \"../components/InputVoiture\";\r\nimport ListVoiture from \"../components/ListVoiture\";\r\n\r\nimport InputUser from \"../components/InputUser\";\r\nimport ListUsers from \"../components/ListUsers\";\r\n\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { AuthContext } from \"../context/authContext\";\r\n\r\nexport default function Admin() {\r\n  const navigate = useNavigate();\r\n  const [cookies, setCookie, removeCookie] = useCookies(); // Utilisez la syntaxe correcte pour obtenir la fonction removeCookie\r\n\r\n  const { isConnect } = useContext(AuthContext);//supp cookies logout\r\n\r\n  const signOut = () => {\r\n    try {\r\n      console.log(\"signout\");\r\n      removeCookie(\"Email\");\r\n      removeCookie(\"access_token\");\r\n      removeCookie(\"AuthToken\");\r\n      removeCookie(\"_gid\");\r\n      removeCookie(\"_ga\");\r\n      navigate(\"/\"); // Déplacez la navigation après la suppression des cookies\r\n      window.location.reload();\r\n\r\n    } catch (err) {\r\n      console.log(\"error : \");\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n  if (isConnect) {\r\n    return (\r\n      <div className=\"pageAdmin\">\r\n        admin\r\n        <button className=\"signout\" onClick={signOut}>\r\n          SIGN OUT\r\n        </button>\r\n        <InputVoiture />\r\n        Voiture disponible\r\n        <ListVoiture />\r\n        connexion\r\n        <InputUser />\r\n        Liste des utilisateurs\r\n        <ListUsers />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n}\r\n","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\connexion.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\services.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\employe.js",["156","157"],[],"import React, { useContext } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { AuthContext } from \"../context/authContext\";\r\n\r\n//style\r\nimport \"../style/admin.css\"\r\n\r\n//components\r\nimport InputTodo from \"../components/InputTodo\";\r\nimport ListTodos from \"../components/ListTodos\";\r\n\r\nexport default function Employe() {\r\n  const navigate = useNavigate();\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies();\r\n\r\n  const { isConnect } = useContext(AuthContext); //logout supp cookies\r\n\r\n  const signOut = () => {\r\n    // deconnecte en suppriment les cookie AuthToken dans inspecter/Application/Cookie\r\n\r\n    try {\r\n      console.log(\"signout\");\r\n      removeCookie(\"Email\");\r\n      removeCookie(\"access_token\");\r\n      removeCookie(\"AuthToken\");\r\n      removeCookie(\"_gid\");\r\n      removeCookie(\"_ga\");\r\n      navigate(\"/\"); // Déplacez la navigation après la suppression des cookies\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(\"error : \");\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  if (isConnect) {\r\n    return (\r\n      <div className=\"pageEmploye\">\r\n        <button className=\"signout\" onClick={signOut}>\r\n          Déconnexion\r\n        </button>\r\n        <h1>Réserver aux personnels</h1>\r\n        <InputTodo />\r\n        <ListTodos />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n}\r\n","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\pages\\home.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\Modal.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\InputUser.js",["158"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputUser = () => {\r\n  // État local pour stocker les données du formulaire\r\n  const [formData, setFormData] = useState({\r\n    role: \"\",\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n// Destructuration des données du formulaire pour une utilisation plus facile\r\n  const { role, nom, prenom, email, password } = formData;\r\n\r\n  // Fonction de mise à jour des données du formulaire lorsqu'un champ change\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n       // Crée un objet 'body' contenant les données du formulaire\r\n      const body = { role, nom, prenom, email, password };\r\n      \r\n      // Envoie une requête POST au serveur avec les données du formulaire\r\n      const response = await fetch(\"http://localhost:5000/connexion\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      window.location = \"/admin\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"text-center mt-5\">Ajouter un employé</h1>\r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"role\"\r\n          value={role}\r\n          onChange={onChange}\r\n          placeholder=\"Admin ou Users\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"nom\"\r\n          value={nom}\r\n          onChange={onChange}\r\n          placeholder=\"Nom de l'employé\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"prenom\"\r\n          value={prenom}\r\n          onChange={onChange}\r\n          placeholder=\"Prénom de l'employé\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          placeholder=\"email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          placeholder=\"mot de passe\"\r\n        />\r\n        <button className=\"btn btn-success\">Enregistré</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InputUser;","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\InputVoiture.js",["159"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputVoiture = () => {\r\n    // État local pour stocker les données du formulaire\r\n  const [formData, setFormData] = useState({\r\n    modele: \"\",\r\n    annee: \"\",\r\n    kilometrage: \"\",\r\n    prix: \"\",\r\n    img: \"\",\r\n  });\r\n\r\n  const { modele, annee, kilometrage, prix, img } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { modele, annee, kilometrage, prix, img };\r\n      const response = await fetch(\"http://localhost:5000/voiture/voiture\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"text-center mt-5\">Ajouter un nouveau véhicule</h1>\r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"modele\"\r\n          value={modele}\r\n          onChange={onChange}\r\n          placeholder=\"Modele de voiture\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"annee\"\r\n          value={annee}\r\n          onChange={onChange}\r\n          placeholder=\"Année du véhicule\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"kilometrage\"\r\n          value={kilometrage}\r\n          onChange={onChange}\r\n          placeholder=\"kilometrage\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"prix\"\r\n          value={prix}\r\n          onChange={onChange}\r\n          placeholder=\"prix\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"img\"\r\n          value={img}\r\n          onChange={onChange}\r\n          placeholder=\"photo du véhicule\"\r\n        />\r\n        <button className=\"btn btn-success\">Valider</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InputVoiture;\r\n\r\n// import React, { Fragment, useState } from \"react\";\r\n\r\n// function InputVoiture() {\r\n//   const InputVoiture = () => {\r\n//     const [\r\n//       modele,\r\n//       annee,\r\n//       kilometrage,\r\n//       prix,\r\n//       img,\r\n//       setModele,\r\n//       setAnnee,\r\n//       setKilometrage,\r\n//       setPrix,\r\n//       setImg,\r\n//     ] = useState(\"\");\r\n\r\n//     const onSubmitForm = async (e) => {\r\n//       e.preventDefault();\r\n//       try {\r\n//         const body = { modele, annee, kilometrage, prix, img };\r\n//         const response = await fetch(\"http://localhost:5000/voiture\", {\r\n//           method: \"POST\",\r\n//           headers: { \"Content-Type\": \"application/json\" },\r\n//           body: JSON.stringify(body),\r\n//         });\r\n\r\n//         window.location = \"/\";\r\n//       } catch (err) {\r\n//         console.error(err.message);\r\n//       }\r\n//     };\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Fragment>\r\n//         <h1 className=\"text-center mt-5\">Ajoute une voiture !</h1>\r\n//         <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={modele}\r\n//             onChange={(e) => setModele(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={annee}\r\n//             onChange={(e) => setAnnee(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={kilometrage}\r\n//             onChange={(e) => setKilometrage(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={prix}\r\n//             onChange={(e) => setPrix(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={img}\r\n//             onChange={(e) => setImg(e.target.value)}\r\n//           />\r\n//           <button className=\"btn btn-success\">Add</button>\r\n//         </form>\r\n//       </Fragment>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default InputVoiture;\r\n","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\ListUsers.js",["160"],[],"import React, { Fragment, useEffect, useState } from \"react\";\r\n// useState est utilisé pour gérer l'état local d'un composant\r\n// useEffect est utilisé pour gérer les effets secondaires dans un composant,\r\n// tels que les appels à des API, la mise à jour du DOM\r\nimport EditUser from \"./EditUser\";\r\n\r\nconst ListUsers = () => {\r\n    // État local pour stocker les données du formulaire\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // pour supprimer un commentaire\r\n  const deleteUser = async (id) => {\r\n    try {\r\n      const deleteUser = await fetch(`http://localhost:5000/connexion/connexion/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      //                        -  voiture\r\n      setUsers(users.filter((connexion) => connexion.user_id !== id)); // désaffiche le commentaire qui a été supprimé en interne\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  // pour lister tout les commentaires\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/connexion/connexion\");\r\n      const jsonData = await response.json(); //await pour dire d'attendre\r\n\r\n      setUsers(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Rôle</th>\r\n            <th>nom</th>\r\n            <th>Prenom</th>\r\n            <th>Email</th>\r\n            <th>Mot de passe</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(\r\n            (\r\n              connexion //voitures.map  ((voiture))\r\n            ) => (\r\n              <tr key={connexion.user_id}>\r\n                <td>{connexion.role}</td>\r\n                <td>{connexion.nom}</td>\r\n                <td>{connexion.prenom}</td>\r\n                <td>{connexion.email}</td>\r\n                <td>{connexion.password}</td>\r\n\r\n                <td>\r\n                  <EditUser connexion={connexion} /> {/* voiture = voiture */}\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => deleteUser(connexion.user_id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\ListVoiture.js",["161"],[],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditVoiture from \"./EditVoiture\";\r\n\r\nconst ListVoitures = () => {\r\n    // État local pour stocker les données du formulaire\r\n  const [voitures, setVoitures] = useState([]);\r\n\r\n  // pour supprimer une voiture\r\n  const deleteVoiture = async (id) => {\r\n    try {\r\n      const deleteVoiture = await fetch(`http://localhost:5000/voiture/voiture/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      setVoitures(voitures.filter((voiture) => voiture.voiture_id !== id)); // désaffiche le commentaire qui a été supprimé en interne\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  // pour lister tout les commentaires\r\n  const getVoitures = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/voiture/voiture\");\r\n      const jsonData = await response.json(); //await pour dire d'attendre\r\n\r\n      setVoitures(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getVoitures();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Modèle</th>\r\n            <th>Année</th>\r\n            <th>Kilométrage</th>\r\n            <th>Montant</th>\r\n            <th>URL image</th>\r\n            <th>Modifier</th>\r\n            <th>Supprimer</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {voitures.map((voiture) => (\r\n            <tr key={voiture.voiture_id}>\r\n              <td>{voiture.modele}</td>\r\n              <td>{voiture.annee}</td>\r\n              <td>{voiture.kilometrage}</td>\r\n              <td>{voiture.prix}</td>\r\n              <td>{voiture.img}</td>\r\n              {/* <td>\r\n                <img src={voiture.img} alt=\"photoo\" />\r\n              </td> */}\r\n\r\n              <td>\r\n                <EditVoiture voiture={voiture} />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => deleteVoiture(voiture.voiture_id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListVoitures;\r\n","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\InputTodo.js",["162"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst InputTodo = () => {\r\n    // État local pour stocker les données du formulaire\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { description };\r\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/commentaire/todos`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      // window.location = \"/employe\";\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"text-center mt-5\">Donne nous ton avis ici</h1>\r\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-success\">Add</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default InputTodo;\r\n","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\ListTodos.js",[],[],"C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\EditUser.js",["163"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditUser = ({ connexion }) => {\r\n    // État local pour stocker les données du formulaire\r\n  const [formData, setFormData] = useState({\r\n    role: connexion.role,\r\n    nom: connexion.nom,\r\n    prenom: connexion.prenom,\r\n    email: connexion.email,\r\n    password: connexion.password,\r\n  });\r\n\r\n  // Fonction pour mettre à jour les champs\r\n  const updateFields = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Fonction pour mettre à jour le commentaire\r\n  const updateEmploye = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/connexion/${connexion.user_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n\r\n      window.location = \"/admin\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${connexion.user_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      <div\r\n        className=\"modal\"\r\n        id={`id${connexion.user_id}`}\r\n        onClick={() => setFormData(connexion)} //voiture\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Modifier l utilisateur</h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setFormData(connexion)} //voiture\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"role\"\r\n                value={formData.role}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"nom\"\r\n                value={formData.nom}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"prenom\"\r\n                value={formData.prenom}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={updateFields}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                onClick={updateEmploye}\r\n              >\r\n                Modifier\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setFormData(connexion)} //voiture\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\EditVoiture.js",["164"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditVoiture = ({ voiture }) => {\r\n    // État local pour stocker les données du formulaire\r\n  const [formData, setFormData] = useState({\r\n    modele: voiture.modele,\r\n    annee: voiture.annee,\r\n    kilometrage: voiture.kilometrage,\r\n    prix: voiture.prix,\r\n    img: voiture.img,\r\n  });\r\n\r\n  // Fonction pour mettre à jour les champs\r\n  const updateFields = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Fonction pour mettre à jour le commentaire\r\n  const updateComment = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/voiture/voiture/${voiture.voiture_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n\r\n      window.location = \"/admin\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${voiture.voiture_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      <div\r\n        className=\"modal\"\r\n        id={`id${voiture.voiture_id}`}\r\n        onClick={() => setFormData(voiture)}\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Modifier la voiture</h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setFormData(voiture)}\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"modele\"\r\n                value={formData.modele}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"annee\"\r\n                value={formData.annee}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"kilometrage\"\r\n                value={formData.kilometrage}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"prix\"\r\n                value={formData.prix}\r\n                onChange={updateFields}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"img\"\r\n                value={formData.img}\r\n                onChange={updateFields}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                onClick={updateComment}\r\n              >\r\n                Modifier\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setFormData(voiture)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditVoiture;\r\n","C:\\Users\\MohamedB\\Documents\\GitHub\\garage\\client\\src\\components\\EditTodo.js",["165"],[],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditTodo = ({ commentaire }) => {\r\n    // État local pour stocker les données du formulaire\r\n  const [description, setDescription] = useState(commentaire.description);\r\n\r\n  //Edit description function\r\n  const updateDescription = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { description };\r\n      const response = await fetch(\r\n        `http://localhost:5000/commentaire/todos/${commentaire.commentaire_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      // window.location = \"/employe\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${commentaire.commentaire_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      {/* id = id10    pour rendre le modal unique*/}\r\n      <div\r\n        className=\"modal\"\r\n        id={`id${commentaire.commentaire_id}`}\r\n        onClick={() => setDescription(commentaire.description)} //modifie sur la même ligne\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">modifier le commentaire</h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setDescription(commentaire.description)} //modifie sur la même ligne\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                onClick={(e) => updateDescription(e)}\r\n              >\r\n                Modifier\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setDescription(commentaire.description)} //modifie sur la même ligne\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditTodo;\r\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":62,"column":19,"nodeType":"170","endLine":62,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":65,"column":19,"nodeType":"170","endLine":65,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":68,"column":19,"nodeType":"170","endLine":68,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":71,"column":19,"nodeType":"170","endLine":71,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":74,"column":19,"nodeType":"170","endLine":74,"endColumn":31},{"ruleId":"171","severity":1,"message":"172","line":17,"column":10,"nodeType":"173","messageId":"174","endLine":17,"endColumn":16},{"ruleId":"171","severity":1,"message":"175","line":6,"column":10,"nodeType":"173","messageId":"174","endLine":6,"endColumn":17},{"ruleId":"171","severity":1,"message":"176","line":6,"column":30,"nodeType":"173","messageId":"174","endLine":6,"endColumn":42},{"ruleId":"177","severity":1,"message":"178","line":68,"column":42,"nodeType":"170","endLine":68,"endColumn":93},{"ruleId":"177","severity":1,"message":"178","line":79,"column":42,"nodeType":"170","endLine":79,"endColumn":93},{"ruleId":"177","severity":1,"message":"178","line":95,"column":13,"nodeType":"170","endLine":95,"endColumn":69},{"ruleId":"171","severity":1,"message":"179","line":1,"column":29,"nodeType":"173","messageId":"174","endLine":1,"endColumn":38},{"ruleId":"171","severity":1,"message":"180","line":1,"column":40,"nodeType":"173","messageId":"174","endLine":1,"endColumn":48},{"ruleId":"171","severity":1,"message":"175","line":16,"column":10,"nodeType":"173","messageId":"174","endLine":16,"endColumn":17},{"ruleId":"171","severity":1,"message":"181","line":16,"column":19,"nodeType":"173","messageId":"174","endLine":16,"endColumn":28},{"ruleId":"171","severity":1,"message":"175","line":16,"column":10,"nodeType":"173","messageId":"174","endLine":16,"endColumn":17},{"ruleId":"171","severity":1,"message":"181","line":16,"column":19,"nodeType":"173","messageId":"174","endLine":16,"endColumn":28},{"ruleId":"171","severity":1,"message":"182","line":27,"column":13,"nodeType":"173","messageId":"174","endLine":27,"endColumn":21},{"ruleId":"171","severity":1,"message":"182","line":23,"column":13,"nodeType":"173","messageId":"174","endLine":23,"endColumn":21},{"ruleId":"171","severity":1,"message":"183","line":14,"column":13,"nodeType":"173","messageId":"174","endLine":14,"endColumn":23},{"ruleId":"171","severity":1,"message":"184","line":12,"column":13,"nodeType":"173","messageId":"174","endLine":12,"endColumn":26},{"ruleId":"171","severity":1,"message":"182","line":11,"column":13,"nodeType":"173","messageId":"174","endLine":11,"endColumn":21},{"ruleId":"171","severity":1,"message":"182","line":22,"column":13,"nodeType":"173","messageId":"174","endLine":22,"endColumn":21},{"ruleId":"171","severity":1,"message":"182","line":22,"column":13,"nodeType":"173","messageId":"174","endLine":22,"endColumn":21},{"ruleId":"171","severity":1,"message":"182","line":12,"column":13,"nodeType":"173","messageId":"174","endLine":12,"endColumn":21},"no-new-object",["185"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'cookie' is assigned a value but never used.","Identifier","unusedVar","'cookies' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useEffect' is defined but never used.","'useState' is defined but never used.","'setCookie' is assigned a value but never used.","'response' is assigned a value but never used.","'deleteUser' is assigned a value but never used.","'deleteVoiture' is assigned a value but never used.","no-object-constructor"]